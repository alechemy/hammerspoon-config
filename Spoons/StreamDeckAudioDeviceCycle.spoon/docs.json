[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "This is a list of devices you want to be able to cycle through, in the form:\n ```lua\n {\n   {name=\"USB audio CODEC\", image=\"headphones.png\"},\n   {name=\"Audioengine 2+  \", image=\"speakers.png\"},\n   {name=\"bosies\", image=\"bluetooth.png\"},\n }",
        "stripped_doc" : [
          "This is a list of devices you want to be able to cycle through, in the form:",
          " ```lua",
          " {",
          "   {name=\"USB audio CODEC\", image=\"headphones.png\"},",
          "   {name=\"Audioengine 2+  \", image=\"speakers.png\"},",
          "   {name=\"bosies\", image=\"bluetooth.png\"},",
          " }"
        ],
        "def" : "StreamDeckAudioDeviceCycle.devices",
        "desc" : "This is a list of devices you want to be able to cycle through, in the form:",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle.devices",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "devices",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "Deprecated" : [

    ],
    "type" : "Module",
    "desc" : "Sets up a button on an Elgato Stream Deck to cycle audio devices",
    "Constructor" : [

    ],
    "doc" : "Sets up a button on an Elgato Stream Deck to cycle audio devices\n\nNotes:\n * This Spoon requires an hs.watchable to be running on hs.audiodevice.watcher.setCallback():\n  ```lua\n  audiodevicewatchable = hs.watchable.new(\"audiodevice\", true)\n  function audiodeviceDeviceCallback(event)\n    audiodeviceWatchable[\"event\"] = event\n  end\n  hs.audiodevice.watcher.setCallback(audiodeviceDeviceCallback)\n  hs.audiodevice.watcher.start()\n ```",
    "Method" : [
      {
        "doc" : "Starts StreamDeckAudioDeviceCycle\n\nParameters:\n * deck - An hs.streamdeck object\n * button - A number from 1 to 15 representing the button to use\n\nReturns:\n * The StreamDeckAudioDeviceCycle object",
        "stripped_doc" : [
          "Starts StreamDeckAudioDeviceCycle",
          ""
        ],
        "def" : "StreamDeckAudioDeviceCycle:start(deck, button)",
        "desc" : "Starts StreamDeckAudioDeviceCycle",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle:start(deck, button)",
        "type" : "Method",
        "returns" : [
          " * The StreamDeckAudioDeviceCycle object"
        ],
        "name" : "start",
        "parameters" : [
          " * deck - An hs.streamdeck object",
          " * button - A number from 1 to 15 representing the button to use",
          ""
        ]
      },
      {
        "doc" : "Stops StreamDeckAudioDeviceCycle\n\nParameters:\n * None\n\nReturns:\n * The StreamDeckAudioDeviceCycle object",
        "stripped_doc" : [
          "Stops StreamDeckAudioDeviceCycle",
          ""
        ],
        "def" : "StreamDeckAudioDeviceCycle:stop()",
        "desc" : "Stops StreamDeckAudioDeviceCycle",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle:stop()",
        "type" : "Method",
        "returns" : [
          " * The StreamDeckAudioDeviceCycle object"
        ],
        "name" : "stop",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Cycle to the next audio device in `devices`\n\nParameters:\n * None\n\nReturns:\n * The StreamDeckAudioDeviceCycle object",
        "stripped_doc" : [
          "Cycle to the next audio device in `devices`",
          ""
        ],
        "def" : "StreamDeckAudioDeviceCycle:cycle()",
        "desc" : "Cycle to the next audio device in `devices`",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle:cycle()",
        "type" : "Method",
        "returns" : [
          " * The StreamDeckAudioDeviceCycle object"
        ],
        "name" : "cycle",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "Command" : [

    ],
    "items" : [
      {
        "doc" : "This is a list of devices you want to be able to cycle through, in the form:\n ```lua\n {\n   {name=\"USB audio CODEC\", image=\"headphones.png\"},\n   {name=\"Audioengine 2+  \", image=\"speakers.png\"},\n   {name=\"bosies\", image=\"bluetooth.png\"},\n }",
        "stripped_doc" : [
          "This is a list of devices you want to be able to cycle through, in the form:",
          " ```lua",
          " {",
          "   {name=\"USB audio CODEC\", image=\"headphones.png\"},",
          "   {name=\"Audioengine 2+  \", image=\"speakers.png\"},",
          "   {name=\"bosies\", image=\"bluetooth.png\"},",
          " }"
        ],
        "def" : "StreamDeckAudioDeviceCycle.devices",
        "desc" : "This is a list of devices you want to be able to cycle through, in the form:",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle.devices",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "devices",
        "parameters" : [

        ]
      },
      {
        "doc" : "Cycle to the next audio device in `devices`\n\nParameters:\n * None\n\nReturns:\n * The StreamDeckAudioDeviceCycle object",
        "stripped_doc" : [
          "Cycle to the next audio device in `devices`",
          ""
        ],
        "def" : "StreamDeckAudioDeviceCycle:cycle()",
        "desc" : "Cycle to the next audio device in `devices`",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle:cycle()",
        "type" : "Method",
        "returns" : [
          " * The StreamDeckAudioDeviceCycle object"
        ],
        "name" : "cycle",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Starts StreamDeckAudioDeviceCycle\n\nParameters:\n * deck - An hs.streamdeck object\n * button - A number from 1 to 15 representing the button to use\n\nReturns:\n * The StreamDeckAudioDeviceCycle object",
        "stripped_doc" : [
          "Starts StreamDeckAudioDeviceCycle",
          ""
        ],
        "def" : "StreamDeckAudioDeviceCycle:start(deck, button)",
        "desc" : "Starts StreamDeckAudioDeviceCycle",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle:start(deck, button)",
        "type" : "Method",
        "returns" : [
          " * The StreamDeckAudioDeviceCycle object"
        ],
        "name" : "start",
        "parameters" : [
          " * deck - An hs.streamdeck object",
          " * button - A number from 1 to 15 representing the button to use",
          ""
        ]
      },
      {
        "doc" : "Stops StreamDeckAudioDeviceCycle\n\nParameters:\n * None\n\nReturns:\n * The StreamDeckAudioDeviceCycle object",
        "stripped_doc" : [
          "Stops StreamDeckAudioDeviceCycle",
          ""
        ],
        "def" : "StreamDeckAudioDeviceCycle:stop()",
        "desc" : "Stops StreamDeckAudioDeviceCycle",
        "notes" : [

        ],
        "signature" : "StreamDeckAudioDeviceCycle:stop()",
        "type" : "Method",
        "returns" : [
          " * The StreamDeckAudioDeviceCycle object"
        ],
        "name" : "stop",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "Field" : [

    ],
    "name" : "StreamDeckAudioDeviceCycle"
  }
]